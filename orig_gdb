GNU gdb (GDB) 7.11
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-apple-darwin15.6.0".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from license_2...(no debugging symbols found)...done.
(gdb) Dump of assembler code for function main:
   0x0000000100000ea0 <+0>:	push   %rbp
   0x0000000100000ea1 <+1>:	mov    %rsp,%rbp
   0x0000000100000ea4 <+4>:	sub    $0x30,%rsp
   0x0000000100000ea8 <+8>:	movl   $0x0,-0x4(%rbp)
   0x0000000100000eaf <+15>:	mov    %edi,-0x8(%rbp)
   0x0000000100000eb2 <+18>:	mov    %rsi,-0x10(%rbp)
   0x0000000100000eb6 <+22>:	cmpl   $0x2,-0x8(%rbp)
   0x0000000100000eba <+26>:	jne    0x100000f46 <main+166>
   0x0000000100000ec0 <+32>:	movl   $0x0,-0x18(%rbp)
   0x0000000100000ec7 <+39>:	movslq -0x18(%rbp),%rax
   0x0000000100000ecb <+43>:	mov    -0x10(%rbp),%rcx
   0x0000000100000ecf <+47>:	mov    0x8(%rcx),%rdi
   0x0000000100000ed3 <+51>:	mov    %rax,-0x20(%rbp)
   0x0000000100000ed7 <+55>:	callq  0x100000f66
   0x0000000100000edc <+60>:	mov    -0x20(%rbp),%rcx
   0x0000000100000ee0 <+64>:	cmp    %rax,%rcx
   0x0000000100000ee3 <+67>:	jae    0x100000f0d <main+109>
   0x0000000100000ee9 <+73>:	movslq -0x18(%rbp),%rax
   0x0000000100000eed <+77>:	mov    -0x10(%rbp),%rcx
   0x0000000100000ef1 <+81>:	mov    0x8(%rcx),%rcx
   0x0000000100000ef5 <+85>:	movsbl (%rcx,%rax,1),%edx
   0x0000000100000ef9 <+89>:	add    -0x14(%rbp),%edx
   0x0000000100000efc <+92>:	mov    %edx,-0x14(%rbp)
   0x0000000100000eff <+95>:	mov    -0x18(%rbp),%eax
   0x0000000100000f02 <+98>:	add    $0x1,%eax
   0x0000000100000f05 <+101>:	mov    %eax,-0x18(%rbp)
   0x0000000100000f08 <+104>:	jmpq   0x100000ec7 <main+39>
   0x0000000100000f0d <+109>:	cmpl   $0x3e5,-0x14(%rbp)
   0x0000000100000f14 <+116>:	jne    0x100000f30 <main+144>
   0x0000000100000f1a <+122>:	lea    0x6f(%rip),%rdi        # 0x100000f90
   0x0000000100000f21 <+129>:	mov    $0x0,%al
   0x0000000100000f23 <+131>:	callq  0x100000f60
   0x0000000100000f28 <+136>:	mov    %eax,-0x24(%rbp)
   0x0000000100000f2b <+139>:	jmpq   0x100000f41 <main+161>
   0x0000000100000f30 <+144>:	lea    0x6a(%rip),%rdi        # 0x100000fa1
   0x0000000100000f37 <+151>:	mov    $0x0,%al
   0x0000000100000f39 <+153>:	callq  0x100000f60
   0x0000000100000f3e <+158>:	mov    %eax,-0x28(%rbp)
   0x0000000100000f41 <+161>:	jmpq   0x100000f57 <main+183>
   0x0000000100000f46 <+166>:	lea    0x5b(%rip),%rdi        # 0x100000fa8
   0x0000000100000f4d <+173>:	mov    $0x0,%al
   0x0000000100000f4f <+175>:	callq  0x100000f60
   0x0000000100000f54 <+180>:	mov    %eax,-0x2c(%rbp)
   0x0000000100000f57 <+183>:	xor    %eax,%eax
   0x0000000100000f59 <+185>:	add    $0x30,%rsp
   0x0000000100000f5d <+189>:	pop    %rbp
   0x0000000100000f5e <+190>:	retq   
End of assembler dump.
(gdb) quit
